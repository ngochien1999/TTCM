//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace QL
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class QLBCMBEntities1 : DbContext
    {
        public QLBCMBEntities1()
            : base("name=QLBCMBEntities1")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Chuyenbay> Chuyenbays { get; set; }
        public virtual DbSet<CTchuyenbay> CTchuyenbays { get; set; }
        public virtual DbSet<CTVe> CTVes { get; set; }
        public virtual DbSet<Hoadon> Hoadons { get; set; }
        public virtual DbSet<Khachhang> Khachhangs { get; set; }
        public virtual DbSet<Maybay> Maybays { get; set; }
        public virtual DbSet<Nhanvien> Nhanviens { get; set; }
        public virtual DbSet<Sanbay> Sanbays { get; set; }
        public virtual DbSet<sysdiagram> sysdiagrams { get; set; }
        public virtual DbSet<Tuyenbay> Tuyenbays { get; set; }
        public virtual DbSet<Ve> Ves { get; set; }
    
        public virtual int deletecb(string macb)
        {
            var macbParameter = macb != null ?
                new ObjectParameter("macb", macb) :
                new ObjectParameter("macb", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("deletecb", macbParameter);
        }
    
        public virtual int deletekh(string maKH)
        {
            var maKHParameter = maKH != null ?
                new ObjectParameter("maKH", maKH) :
                new ObjectParameter("maKH", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("deletekh", maKHParameter);
        }
    
        public virtual int deletemb(string maMB)
        {
            var maMBParameter = maMB != null ?
                new ObjectParameter("maMB", maMB) :
                new ObjectParameter("maMB", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("deletemb", maMBParameter);
        }
    
        public virtual int deletenv(string manv)
        {
            var manvParameter = manv != null ?
                new ObjectParameter("manv", manv) :
                new ObjectParameter("manv", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("deletenv", manvParameter);
        }
    
        public virtual int deletesb(string masb)
        {
            var masbParameter = masb != null ?
                new ObjectParameter("masb", masb) :
                new ObjectParameter("masb", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("deletesb", masbParameter);
        }
    
        public virtual ObjectResult<NewSelectCommand_Result> NewSelectCommand()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<NewSelectCommand_Result>("NewSelectCommand");
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual int ThemDuLieu(string maCB, Nullable<System.DateTime> ngayBay, Nullable<System.TimeSpan> thoiGianBay, string maTB, Nullable<System.TimeSpan> thoigiandung, string sBtrunggian, string sBdi, string sBden, string maMB)
        {
            var maCBParameter = maCB != null ?
                new ObjectParameter("MaCB", maCB) :
                new ObjectParameter("MaCB", typeof(string));
    
            var ngayBayParameter = ngayBay.HasValue ?
                new ObjectParameter("NgayBay", ngayBay) :
                new ObjectParameter("NgayBay", typeof(System.DateTime));
    
            var thoiGianBayParameter = thoiGianBay.HasValue ?
                new ObjectParameter("ThoiGianBay", thoiGianBay) :
                new ObjectParameter("ThoiGianBay", typeof(System.TimeSpan));
    
            var maTBParameter = maTB != null ?
                new ObjectParameter("MaTB", maTB) :
                new ObjectParameter("MaTB", typeof(string));
    
            var thoigiandungParameter = thoigiandung.HasValue ?
                new ObjectParameter("Thoigiandung", thoigiandung) :
                new ObjectParameter("Thoigiandung", typeof(System.TimeSpan));
    
            var sBtrunggianParameter = sBtrunggian != null ?
                new ObjectParameter("SBtrunggian", sBtrunggian) :
                new ObjectParameter("SBtrunggian", typeof(string));
    
            var sBdiParameter = sBdi != null ?
                new ObjectParameter("SBdi", sBdi) :
                new ObjectParameter("SBdi", typeof(string));
    
            var sBdenParameter = sBden != null ?
                new ObjectParameter("SBden", sBden) :
                new ObjectParameter("SBden", typeof(string));
    
            var maMBParameter = maMB != null ?
                new ObjectParameter("MaMB", maMB) :
                new ObjectParameter("MaMB", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ThemDuLieu", maCBParameter, ngayBayParameter, thoiGianBayParameter, maTBParameter, thoigiandungParameter, sBtrunggianParameter, sBdiParameter, sBdenParameter, maMBParameter);
        }
    
        public virtual ObjectResult<TimKiemNangCao_Result> TimKiemNangCao(string sbdi, string sbden, string hang, Nullable<System.DateTime> ngaybay)
        {
            var sbdiParameter = sbdi != null ?
                new ObjectParameter("sbdi", sbdi) :
                new ObjectParameter("sbdi", typeof(string));
    
            var sbdenParameter = sbden != null ?
                new ObjectParameter("sbden", sbden) :
                new ObjectParameter("sbden", typeof(string));
    
            var hangParameter = hang != null ?
                new ObjectParameter("Hang", hang) :
                new ObjectParameter("Hang", typeof(string));
    
            var ngaybayParameter = ngaybay.HasValue ?
                new ObjectParameter("Ngaybay", ngaybay) :
                new ObjectParameter("Ngaybay", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TimKiemNangCao_Result>("TimKiemNangCao", sbdiParameter, sbdenParameter, hangParameter, ngaybayParameter);
        }
    }
}
